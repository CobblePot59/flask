server {
    listen 80;
    server_name www.toastr.int;

    return 301 https://$host$request_uri;
}

server {
    listen		443 ssl;
    server_name www.toastr.int;

    server_tokens off;
    ssl_certificate     /etc/ssl/certs/www.toastr.int.crt;
    ssl_certificate_key /etc/ssl/private/www.toastr.int.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         "ALL:!RSA:!CAMELLIA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SHA1:!SHA256:!SHA384";

    location / {
        proxy_pass https://toastr;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-Host $host;
    }
}

upstream toastr {
    ip_hash;
    server toastr1:5000;
    server toastr2:5000;
}